{"version":3,"sources":["components/VideoMedia.js","components/MixedMedia.js","components/TextMedia.js","components/CourseConnection.js","App.js","index.js"],"names":["VideoMedia","props","context","state","playerSource","videoUrl","prevProps","prevState","this","handleValueChange","updatePlayerInfo","player","load","play","value","setState","className","ref","videoId","preload","autoPlay","fluid","playsInline","autoHide","disableDefaultControls","src","Component","MixedMedia","Card","imageUrl","Title","Image","text","React","socket","io","forceNew","transport","transportOptions","polling","extraHeaders","CourseConnection","on","console","log","opts","transports","message","msgCallbackFromParent","event","eventCallbackFromParent","client","error","id","App","readEvents","dataFromChild","eventData","state_update","readMessages","document","title","split","err","InvalidData","data","JSON","stringify","EventParser","connected","Container","Row","Col","sm","splitSlide","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.15fb4b87.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Player, ControlBar, PlayToggle, BigPlayButton } from \"video-react\";\nimport \"../../node_modules/video-react/dist/video-react.css\"; // import css\n\nexport default class VideoMedia extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      playerSource: null,\n      videoUrl: null,\n    };\n  }\n\n  componentDidMount(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this.handleValueChange(this.props.videoUrl);\n      this.updatePlayerInfo(this.props.videoUrl);\n      this.player.load();\n    }\n    // this.player.toggleFullscreen(true);\n    this.player.play();\n    // this.player.toggleFullscreen(true);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.videoUrl !== this.props.videoUrl) {\n      this.handleValueChange(this.props.videoUrl);\n      this.updatePlayerInfo(this.props.videoUrl);\n      this.player.load();\n    }\n    // this.player.toggleFullscreen(true);\n    this.player.play();\n    // this.player.toggleFullscreen(true);\n  }\n\n  handleValueChange(value) {\n    this.setState({\n      videoUrl: value,\n    });\n  }\n\n  updatePlayerInfo(value) {\n    this.setState({\n      playerSource: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"VideoMedia\">\n        <Player\n          ref={(player) => {\n            this.player = player;\n          }}\n          videoId={this.props.videoUrl}\n          preload={true}\n          autoPlay={true}\n          fluid={true}\n          playsInline={true}\n        >\n          <ControlBar\n            className=\"video-react-control-bar-hide\"\n            autoHide={true}\n            disableDefaultControls={true}\n          ></ControlBar>\n          <BigPlayButton className=\"big-play-button-hide\"> </BigPlayButton>\n          <source src={this.state.playerSource} />\n        </Player>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {Image, Card } from 'react-bootstrap';\n\nclass MixedMedia extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    // console.log(\"MixedMedia received:\");\n    // console.log(this.props);\n    return (\n      <div className=\"MixedMedia\">\n      <Card>\n        {this.props.imageUrl ? <Card.Title><Image src={this.props.imageUrl} fluid/></Card.Title> : null }\n        {this.props.text ? <Card.Title>{this.props.text}</Card.Title> : null}\n      </Card>\n      </div>\n    );\n  }\n}\n\nexport default MixedMedia;\n\n\n","import React from 'react';\nimport { Breadcrumb } from 'react-bootstrap'\n\nclass TextMedia extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    // console.log('TextMedia received:');\n    // console.log(this.props);\n    return (\n      <div className='TextMedia'>\n      <Breadcrumb>\n        <Breadcrumb.Item>{this.props.text}</Breadcrumb.Item>\n      </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default TextMedia;\n","import React from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io({\n  forceNew: true,\n  transport: ['websocket'],\n  transportOptions: {\n    polling: {\n      extraHeaders: {\n      }\n    }\n  }\n});\n\nclass CourseConnection extends React.Component {\n  componentDidMount() {\n    socket.on('connect', socket => {\n    console.log(\"CourseConnection: socket.on('connect') received.\");\n    this.setState({'client': socket, 'connected': true});\n    });\n    socket.on('reconnect_attempt', () => {\n      socket.io.opts.transports = ['polling', 'websocket'];\n    });\n    socket.on('message', message => {\n        console.log(\"CourseConnection: socket.on('message') received\");\n        // todo: Do something else with messages...\n        this.props.msgCallbackFromParent(message);\n    });\n     // Expects JSON\n     //  todo: had to modify to work with admin interface\n    socket.on('event', event => {\n        console.log(\"CourseConnection: socket.on('event') received\");\n        this.setState({'event': event});\n        this.props.eventCallbackFromParent(event);\n    });\n    socket.on('disconnect', client => {\n        console.log(\"CourseConnection: socket.on('disconnect') received\");\n        this.setState({'client': client, 'connected': false});\n    });\n    socket.on('error', error => {\n       console.log(socket.id + ' error: ' + error)\n    });\n    socket.on('connect_error', error => {\n       console.log(socket.id + ' connect error: ' + error)\n    });\n    socket.on('connect_timeout', error => {\n       console.log(socket.id +  ' client timeout: ' + error)\n    });\n  }\n  render() {\n      return null\n  }\n}\nexport default CourseConnection;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport VideoMedia from \"./components/VideoMedia\";\nimport MixedMedia from \"./components/MixedMedia\";\nimport TextMedia from \"./components/TextMedia\";\nimport CourseConnection from \"./components/CourseConnection\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: null,\n      event: null,\n      connected: null,\n      text: null,\n      videoUrl: null,\n      imageUrl: null,\n    };\n  }\n\n  // Events set state, Messages do not.\n  readEvents = (dataFromChild) => {\n    // console.log(\"App received EVENT from CourseConnection:\" + dataFromChild);\n    const eventData = dataFromChild;\n    let state_update = {};\n    state_update[\"event\"] = dataFromChild;\n    if (\"text\" in eventData) {\n      state_update[\"text\"] = eventData[\"text\"];\n    } else {\n      state_update[\"text\"] = null;\n    }\n    if (\"videoUrl\" in eventData) {\n      if (state_update[\"videoUrl\"] !== null) {\n        state_update[\"videoUrl\"] = eventData[\"videoUrl\"];\n      }\n    } else {\n      state_update[\"videoUrl\"] = null;\n    }\n    if (\"imageUrl\" in eventData) {\n      state_update[\"imageUrl\"] = eventData[\"imageUrl\"];\n    } else {\n      state_update[\"imageUrl\"] = null;\n    }\n    this.setState(state_update);\n  };\n\n  readMessages = (dataFromChild) => {\n    console.log(\"App received MESSAGE from CourseConnection:\" + dataFromChild);\n    try {\n      document.title = dataFromChild.split(\"room_id: \")[1].split(\",\")[0];\n    } catch (err) {\n      document.title = \"Unknown\";\n    }\n    this.setState({ message: dataFromChild });\n  };\n\n  InvalidData = (data) => {\n    console.log(\n      \"Invalid JSON data schema sent from server: \" + JSON.stringify(data)\n    );\n  };\n\n  EventParser = (event) => {\n    if (!(\"eventType\" in event)) {\n      return <this.InvalidData />;\n    } else {\n      switch (event[\"eventType\"]) {\n        case \"TextMedia\":\n          return \"Text\";\n        case \"VideoMedia\":\n          return \"Video\";\n        case \"MixedMedia\":\n          return \"Image\";\n        default:\n          return null;\n      }\n    }\n  };\n\n  render() {\n    const splitSlide = (props) => [\n      <Row>\n        <Col sm={6}>\n          <VideoMedia {...props} />\n        </Col>\n        <Col sm={6}>\n          <MixedMedia {...props} />\n        </Col>\n      </Row>,\n    ];\n    const currentSlide = (props) => {\n      if (props.videoUrl && !props.imageUrl) {\n        return (\n          <Row>\n            <Col sm={12}>\n              <VideoMedia {...props} />\n            </Col>\n          </Row>\n        );\n      }\n      if (props.imageUrl && !props.videoUrl) {\n        return (\n          <Row>\n            <Col sm={12}>\n              <MixedMedia {...props} />\n            </Col>\n          </Row>\n        );\n      }\n      if (props.videoUrl && props.imageUrl) {\n        return splitSlide(props);\n      }\n      if (!props.videoUrl && !props.imageUrl) {\n        return <p></p>;\n      }\n    };\n    return (\n      <div className=\"App\">\n        <CourseConnection\n          msgCallbackFromParent={this.readMessages}\n          eventCallbackFromParent={this.readEvents}\n        />\n        <Container fluid>{currentSlide(this.state)}</Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}